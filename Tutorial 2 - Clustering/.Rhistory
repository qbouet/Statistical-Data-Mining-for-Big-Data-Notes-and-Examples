knitr::opts_chunk$set(echo = TRUE)
x1 = c(1,1,0,5,6,4)
x2 = c(4,3,4,1,2,0)
plot(x1,x2)
df2 = data.frame(c(1,1,0,5,6,4),
c(4,3,4,1,2,0))
colnames(df2)=c('X', 'Y')
plot(df2$X, df2$Y,
pch=19,
cex=1.3,
ylab="Y", xlab="X",
main="data scatterplot")
set.seed(123)
labs <- sample(c(1,2), size=6, replace=T)
df2$labels <- labs
set.seed(123)
labs <- sample(c(1,2), size=6, replace=T)
df2$labels <- labs
df2$labels
x1 = df2[labs==1,c(1,2)]
xc1 = colSums(x1)/4
x2 = df2[labs==2,c(1,2)]
xc2 = colSums(x2)/2
plot(df2$X,df2$Y, pch=19, cex=1.2,
ylab="Y", xlab="X", col=labs, main="1st iteration")
points(xc1[1], xc1[2], col='black', pch='+', cex=2)
points(xc2[1],xc2[2], col='red', pch='+', cex=2)
plot(df2$X,df2$Y, pch=19, cex=1.2,
ylab="Y", xlab="X", col=labs, main="1st iteration")
points(xc1[1], xc1[2], col='black', pch='+', cex=2)
points(xc2[1],xc2[2], col='red', pch='+', cex=2)
#cluster 1
temp1a = (df2[,1] - xc1[1])
temp1b = (df2[,2] - xc1[2])
d1 = sqrt(temp1aˆ2 + temp1bˆ2)
#cluster 1
temp1a = (df2[,1] - xc1[1])
temp1b = (df2[,2] - xc1[2])
d1 = sqrt(temp1a^2 + temp1b^2)
#cluster2
temp2a = (df2[,1] - xc2[1])
temp2b = (df2[,2] - xc2[2])
d2 = sqrt(temp2a^2 + temp2b^2)
df2$d1 = round(d1,3)
df2$d2 = round(d2,3)
#cluster 1
temp1a = (df2[,1] - xc1[1])
temp1b = (df2[,2] - xc1[2])
d1 = sqrt(temp1a^2 + temp1b^2)
#cluster2
temp2a = (df2[,1] - xc2[1])
temp2b = (df2[,2] - xc2[2])
d2 = sqrt(temp2a^2 + temp2b^2)
df2$d1 = round(d1,3)
df2$d2 = round(d2,3)
res <- kmeans(df2, centers=2,nstart=10) # 2 clusters; 10 random sets
plot(df2$X, df2$Y, pch=19,cex=2, col=res$cluster+1,
ylab="Y", xlab="X",
main="R kmeans()")
points(res$centers, pch="+", cex=2)
knitr::opts_chunk$set(echo = TRUE)
#load data
install.packages('ISLR') #note: may need to install.packages in the console!
library(ISLR)
data("USArrests")
df <- USArrests
df <- df[, c(1,2)] #use only 1st 2 cols
# Do a cluster analysis with single and complex linkage
library(ISLR)
data("USArrests")
df3 <- USArrests
df3 <- df3[, c(1,2)] #use only 1st 2 cols
#load data
#install.packages('ISLR') #note: may need to install.packages in the console!
library(ISLR)
data("USArrests")
df <- USArrests
df <- df[, c(1,2)] #use only 1st 2 cols
# Do a cluster analysis with single and complex linkage
library(ISLR)
data("USArrests")
df3 <- USArrests
df3 <- df3[, c(1,2)] #use only 1st 2 cols
#cluster analysis with complete linkage
hc5 = hclust(d3, method="complete")
#cluster analysis with complete linkage
d3 = dist(df3, method="euclidean") #hclust requires dist.
hc5 = hclust(d3, method="complete")
#plots
plot(hc5,ylab="Assault", xlab="Murder",
main="Raw Data")
pr.out = prcomp ( USArrests , scale = TRUE )
#cluster analysis with complete linkage
d3 = dist(df3, method="euclidean") #hclust requires dist.
hc6 = hclust(d3, method="complete")
#plots
plot(hc6,ylab="Assault", xlab="Murder",
main="Raw Data")
df4 = prcomp ( USArrests , scale = TRUE )
#cluster analysis with complete linkage
d4 = dist(df4, method="euclidean") #hclust requires dist.
df4 <- prcomp( USArrests, scale = TRUE)
df4 <- df4[, c(1,2)] #use only 1st 2 cols
df4 = prcomp( df3, scale = TRUE)
#cluster analysis with complete linkage
d4 = dist(df4, method="euclidean") #hclust requires dist.
pr.out = prcomp(USArrests , scale = TRUE)
names(pr.out)
#cluster analysis with complete linkage
d4 = dist(df4, method="euclidean") #hclust requires dist.
pr.out = prcomp(USArrests , scale = TRUE)
names(pr.out)
pr.out$center
pr.out$scale
pr.out$rotation
dim(pr.out$x)
biplot(pr.out, scale =0)
pr.out$sdev
pr.var = pr.out$sdev^2
pr.var
pve = pr.var / sum (pr.var)
pve
plot(pve, xlab =" Principal Component ", ylab =" Proportion of
Variance Explained ", ylim = c (0 ,1) , type =’b’)
# pr.out = prcomp(USArrests, scale = TRUE)
# names(pr.out)
# pr.out$center
# pr.out$scale
# pr.out$rotation
# dim(pr.out$x)
# biplot(pr.out, scale =0)
# pr.out$sdev
# pr.var = pr.out$sdev^2
# pr.var
# pve = pr.var / sum (pr.var)
# pve
# plot(pve, xlab =" Principal Component ", ylab =" Proportion of
# Variance Explained ", ylim = c (0 ,1) , type =’b’)
df4 = scale(df3)
#cluster analysis with complete linkage
d4 = dist(df4, method="euclidean") #hclust requires dist.
hc6 = hclust(d4, method="complete")
#plots
plot(hc6,ylab="Assault", xlab="Murder",
main="Raw Data")
arrests_hclust %>% cutree(k = 3)
arrests_hclust <- USArrests %>%
dist() %>%
hclust()
arrests_hclust = cutree(k = 3)
arrests_hclust = cutree(hc5, k = 3)
arrests_hclust = cutree(k = 3) -> cluster_a
arrests_hclust = cutree(hc5, k = 3)
arrests_hclust = cutree(hc5, k = 3) -> cluster_a
table(cluster_a)
arrests_hclust = cutree(hc5, k = 3)
arrests_hclust
arrests_hclust = cutree(hc5, k = 3) -> cluster_a
table(cluster_a)
arrests_hclust = cutree(hc5, k = 3)
arrests_hclust
arrests_hclust = cutree(hc5, k = 3) -> cluster_a
table(cluster_a)
arrests_hclust = cutree(hc5, k = 3)
arrests_hclust
arrests_hclust = cutree(hc5, k = 3) -> cluster_a
table(cluster_a)
#load data
#install.packages('ISLR') #note: may need to install.packages in the console!
library(ISLR)
data("USArrests")
df <- USArrests
df <- df[, c(1,2)] #use only 1st 2 cols
# Do a cluster analysis with single and complex linkage
library(ISLR)
data("USArrests")
df3 <- USArrests
#df3 <- df3[, c(1,2)] #use only 1st 2 cols
#cluster analysis with complete linkage
d3 = dist(df3, method="euclidean") #hclust requires dist.
hc5 = hclust(d3, method="complete") #use complete linkage
#plot
plot(hc5,ylab="Assault", xlab="Murder",
main="Raw Data")
arrests_hclust = cutree(hc5, k = 3)
arrests_hclust
arrests_hclust = cutree(hc5, k = 3) -> cluster_a
table(cluster_a)
#load data
#install.packages('ISLR') #note: may need to install.packages in the console!
library(ISLR)
data("USArrests")
df <- USArrests
arrests_pca <- USArrests %>%
prcomp(scale = T)
#load data
#install.packages('ISLR') #note: may need to install.packages in the console!
library(ISLR)
data("USArrests")
df <- USArrests
arrests_pca <- USArrests -> prcomp(scale = T)
#load data
#install.packages('ISLR') #note: may need to install.packages in the console!
library(ISLR)
data("USArrests")
df <- USArrests
arrests_pca <- USArrests
prcomp(scale = T)
#load data
#install.packages('ISLR') #note: may need to install.packages in the console!
library(ISLR)
data("USArrests")
df <- USArrests
pr.out = prcomp(USArrests, scale = TRUE)
pve =100* pr.out$sdev ^2/ sum ( pr.out$sdev ^2)
pve
#load data
#install.packages('ISLR') #note: may need to install.packages in the console!
library(ISLR)
data("USArrests")
df <- USArrests
# Note: The variance explained by each principal component:
# pr.var = pr.out$sdev^2
pr.out = prcomp(USArrests, scale = TRUE)
pve =100*pr.out$sdev^2 / sum(pr.out$sdev^2)
pve
#cluster analysis with complete linkage
d3 = dist(USArrests, method="euclidean") #hclust requires dist.
hc5 = hclust(d3, method="complete") #use complete linkage
#plot
plot(hc5,ylab="Assault", xlab="Murder",
main="Raw Data")
#cluster analysis with complete linkage
d = dist(USArrests, method="euclidean") #hclust requires distance
hc = hclust(d, method="complete") #use complete linkage
#plot
plot(hc,ylab="Assault", xlab="Murder",
main="Raw Data")
arrests_hclust = cutree(hc, k = 3)
arrests_hclust
arrests_hclust = cutree(hc, k = 3) -> cluster_a
table(cluster_a)
#scale variables to have standard deviation one
df = scale(USArrests)
#cluster analysis with complete linkage
d = dist(df, method="euclidean") #hclust requires dist.
hc = hclust(d, method="complete") #use complete linkage
#plot
plot(hc,ylab="Assault", xlab="Murder",
main="Raw Data")
arrests_hclust = cutree(hc, k = 3)
arrests_hclust
arrests_hclust = cutree(hc, k = 3) -> cluster_a
table(cluster_a)
knitr::opts_chunk$set(echo = TRUE)
install.packages(ISLR2)
library(ISLR2)
install.packages('ISLR2')
library(ISLR2)
nci.labs <- NCI60$labs
table(nci.labs)
nci.data <- NCI60$data
dim(nci.data)
#install.packages('ISLR2')
library(ISLR2)
nci.labs <- NCI60$labs
table(nci.labs)
nci.data <- NCI60$data
dim(nci.data)
nci.sub<- nci.data[, 1:500]
#Centering
nci.sub.scale<-scale(nci.sub, scale = TRUE)
var.cov<-cov(nci.sub)
library(matlib)
e_decom<-eigen(var.cov)
e_decom
library(matlib)
e_decom<-eigen(var.cov)
#e_decom
library(ISLR)
data("USArrests")
states <- row.names(USArrests)
states
par(mfrow = c(1, 2))
plot(pve, xlab = "Principal Component",
ylab = "Proportion of Variance Explained",
ylim = c(0, 1),
type = "b")
plot(cumsum(pve), xlab = "Principal Component",
ylab = "Cumulative Proportion of Variance Explained",
ylim = c(0, 1),
type = "b")
a <- c(1, 2, 8, -3)
cumsum(a)
